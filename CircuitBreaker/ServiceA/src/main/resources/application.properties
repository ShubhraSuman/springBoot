# Server port configuration
server.port=8080

# Management and Actuator configuration
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

# Resilience4j Circuit Breaker configuration for serviceA
resilience4j.circuitbreaker.instances.serviceA.register-health-indicator=true
resilience4j.circuitbreaker.instances.serviceA.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.serviceA.failure-rate-threshold=50
resilience4j.circuitbreaker.instances.serviceA.minimum-number-of-calls=5
resilience4j.circuitbreaker.instances.serviceA.automatic-transition-from-open-to-half-open-enabled=true
resilience4j.circuitbreaker.instances.serviceA.wait-duration-in-open-state=5s
resilience4j.circuitbreaker.instances.serviceA.permitted-number-of-calls-in-half-open-state=3
resilience4j.circuitbreaker.instances.serviceA.sliding-window-size=10
resilience4j.circuitbreaker.instances.serviceA.sliding-window-type=COUNT_BASED

# Resilience4j Retry configuration for serviceA
resilience4j.retry.instances.serviceA.register-health-indicator=true
resilience4j.retry.instances.serviceA.max-retry-attempts=5
resilience4j.retry.instances.serviceA.wait-duration=10s

# Resilience4j Rate Limiter configuration for serviceA
resilience4j.ratelimiter.instances.serviceA.register-health-indicator=false
resilience4j.ratelimiter.instances.serviceA.limit-for-period=10
resilience4j.ratelimiter.instances.serviceA.limit-refresh-period=10s
resilience4j.ratelimiter.instances.serviceA.timeout-duration=3s
